call mtr.add_suppression("Unsafe statement written to the binary log");
drop table if exists t1,t2;
create table t1 (a int auto_increment , primary key (a));
insert into t1 values (NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL);
call dbms_trans.returning("a", "update t1 set a=a+10 where a > 34");
a
45
46
call dbms_trans.returning("*", "update t1 set a=a+100 where a=1 and a=2");
call dbms_trans.returning("*", "update t1 set a=b+100 where a=1 and a=2");
ERROR 42S22: Unknown column 'b' in 'field list'
call dbms_trans.returning("*", "update t1 set a=b+100 where c=1 and a=2");
ERROR 42S22: Unknown column 'c' in 'where clause'
call dbms_trans.returning("*", "update t1 set d=a+100 where a=1");
ERROR 42S22: Unknown column 'd' in 'field list'
drop table t1;
CREATE TABLE t1
(
place_id int (10) unsigned NOT NULL,
shows int(10) unsigned DEFAULT '0' NOT NULL,
ishows int(10) unsigned DEFAULT '0' NOT NULL,
ushows int(10) unsigned DEFAULT '0' NOT NULL,
clicks int(10) unsigned DEFAULT '0' NOT NULL,
iclicks int(10) unsigned DEFAULT '0' NOT NULL,
uclicks int(10) unsigned DEFAULT '0' NOT NULL,
ts timestamp,
PRIMARY KEY (place_id,ts)
);
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
INSERT INTO t1 (place_id,shows,ishows,ushows,clicks,iclicks,uclicks,ts)
VALUES (1,0,0,0,0,0,0,20000928174434);
call dbms_trans.returning("place_id, shows ", "UPDATE t1 SET
                          shows=shows+1,ishows=ishows+1,ushows=ushows+1,clicks=clicks+1,iclicks=iclicks+1,uclicks=uclicks+1
                          WHERE place_id=1 AND ts>='2000-09-28 00:00:00'");
place_id	shows
1	1
select place_id,shows from t1;
place_id	shows
1	1
drop table t1;
CREATE TABLE t1 (
lfdnr int(10) unsigned NOT NULL default '0',
ticket int(10) unsigned NOT NULL default '0',
client varchar(255) NOT NULL default '',
replyto varchar(255) NOT NULL default '',
subject varchar(100) NOT NULL default '',
timestamp int(10) unsigned NOT NULL default '0',
tstamp timestamp NOT NULL,
status int(3) NOT NULL default '0',
type varchar(15) NOT NULL default '',
assignment int(10) unsigned NOT NULL default '0',
fupcount int(4) unsigned NOT NULL default '0',
parent int(10) unsigned NOT NULL default '0',
activity int(10) unsigned NOT NULL default '0',
priority tinyint(1) unsigned NOT NULL default '1',
cc varchar(255) NOT NULL default '',
bcc varchar(255) NOT NULL default '',
body text NOT NULL,
comment text,
header text,
PRIMARY KEY  (lfdnr),
KEY k1 (timestamp),
KEY k2 (type),
KEY k3 (parent),
KEY k4 (assignment),
KEY ticket (ticket)
) ENGINE=MyISAM;
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
INSERT INTO t1 VALUES (773,773,'','','',980257344,20010318180652,0,'Open',10,0,0,0,1,'','','','','');
alter table t1 change lfdnr lfdnr int(10) unsigned not null auto_increment;
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
call dbms_trans.returning("status,type", "update t1 set status=1 where
                          type='Open'");
status	type
1	Open
select status from t1;
status
1
drop table t1;
create table t1 (a int not null, b int not null, key (a));
insert into t1 values (1,1),(1,2),(1,3),(3,1),(3,2),(3,3),(3,1),(3,2),(3,3),(2,1),(2,2),(2,3);
SET @tmp=0;
call dbms_trans.returning("a, b", "update t1 set b=(@tmp:=@tmp+1) order by a");
a	b
1	1
1	2
1	3
2	4
2	5
2	6
3	7
3	8
3	9
3	10
3	11
3	12
Warnings:
Warning	1287	Setting user variables within expressions is deprecated and will be removed in a future release. Consider alternatives: 'SET variable=expression, ...', or 'SELECT expression(s) INTO variables(s)'.
call dbms_trans.returning("*",  "update t1 set b=99 where a=1 order by b asc limit 1");
a	b
1	99
select * from t1 order by a,b;
a	b
1	2
1	3
1	99
2	4
2	5
2	6
3	7
3	8
3	9
3	10
3	11
3	12
call dbms_trans.returning("a, b",  "update t1 set b=100 where a=1 order by b
                          desc limit 2");
a	b
1	100
1	100
call dbms_trans.returning("*", "update t1 set a=a+10+b where a=1 order by b");
a	b
13	2
111	100
111	100
select * from t1 order by a,b;
a	b
2	4
2	5
2	6
3	7
3	8
3	9
3	10
3	11
3	12
13	2
111	100
111	100
create table t2 (a int not null, b int not null);
insert into t2 values (1,1),(1,2),(1,3);
call dbms_trans.returning("*" , "update t1 set b=(select distinct 1 from (select
* from t2) a)");
a	b
111	1
13	1
111	1
3	1
3	1
3	1
3	1
3	1
3	1
2	1
2	1
2	1
drop table t1,t2;
CREATE TABLE t1 (
`id_param` smallint(3) unsigned NOT NULL default '0',
`nom_option` char(40) NOT NULL default '',
`valid` tinyint(1) NOT NULL default '0',
KEY `id_param` (`id_param`,`nom_option`)
) ENGINE=MyISAM;
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
INSERT INTO t1 (id_param,nom_option,valid) VALUES (185,'600x1200',1);
call dbms_trans.returning("*",  "UPDATE t1 SET nom_option='test' WHERE
                          id_param=185 AND nom_option='600x1200' AND valid=1
                          LIMIT 1");
id_param	nom_option	valid
185	test	1
select * from t1;
id_param	nom_option	valid
185	test	1
drop table t1;
create table t1 (id int not null auto_increment primary key, id_str varchar(32));
insert into t1 (id_str) values ("test");
call dbms_trans.returning("id, id_str",  "update t1 set id_str = concat(id_str,
     id) where id = last_insert_id()");
id	id_str
1	test1
select * from t1;
id	id_str
1	test1
drop table t1;
create table t1 (a int, b char(255), key(a, b(20)));
insert into t1 values (0, '1');
call dbms_trans.returning("a, b",  "update t1 set b = b + 1 where a = 0");
a	b
0	2
select * from t1;
a	b
0	2
drop table t1;
create table t1(f1 int);
select DATABASE();
DATABASE()
test
update t1 set f1=1 where count(*)=1;
ERROR HY000: Invalid use of group function
select DATABASE();
DATABASE()
test
delete from t1 where count(*)=1;
ERROR HY000: Invalid use of group function
drop table t1;
create table t1 ( a int, b int default 0, index (a) );
insert into t1 (a) values (0),(0),(0),(0),(0),(0),(0),(0);
flush status;
select a from t1 order by a limit 1;
a
0
flush status;
call dbms_trans.returning("*",  "update t1 set a=9999 order by a limit 1");
a	b
9999	0
call dbms_trans.returning("*",  "update t1 set b=9999 order by a limit 1");
a	b
0	9999
flush status;
delete from t1 order by a limit 1;
flush status;
delete from t1 order by a desc limit 1;
alter table t1 disable keys;
Warnings:
Note	1031	Table storage engine for 't1' doesn't have this option
flush status;
delete from t1 order by a limit 1;
select * from t1;
a	b
0	0
0	0
0	0
0	0
0	9999
call dbms_trans.returning( "*",  "update t1 set a=a+10,b=1 order by a limit 3");
a	b
10	1
10	1
10	1
call dbms_trans.returning( "*",  "update t1 set a=a+11,b=2 order by a limit 3");
a	b
11	2
11	2
21	2
call dbms_trans.returning( "*",  "update t1 set a=a+12,b=3 order by a limit 3");
a	b
22	3
22	3
23	3
select * from t1 order by a;
a	b
11	2
21	2
22	3
22	3
23	3
drop table t1;
create table t1 (f1 date not null);
insert into t1 values('2000-01-01'),('2000-01-01');
call dbms_trans.returning("f1", "update t1 set f1='2002-02-02' where f1 is
                          null");
f1
select * from t1;
f1
2000-01-01
2000-01-01
drop table t1;
create table t1 (a int);
insert into t1 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);
create table t2 (a int, filler1 char(200), filler2 char(200), key(a));
insert into t2 select A.a + 10*B.a, 'filler','filler' from t1 A, t1 B;
flush status;
call dbms_trans.returning("*",  "update t2 set a=3 where a=2");
a	filler1	filler2
3	filler	filler
drop table t1, t2;
create table t1(f1 int, `*f2` int);
insert into t1 values (1,1);
call dbms_trans.returning("*f2", "update t1 set `*f2`=1");
*f2
1
drop table t1;
create table t1(f1 int);
call dbms_trans.returning("f2",  "update t1 set f2=1 order by f2");
ERROR 42S22: Unknown column 'f2' in 'field list'
drop table t1;
CREATE TABLE t1 (
request_id int unsigned NOT NULL auto_increment,
user_id varchar(12) default NULL,
time_stamp datetime NOT NULL default '2000-01-01 00:00:01',
ip_address varchar(15) default NULL,
PRIMARY KEY (request_id),
KEY user_id_2 (user_id,time_stamp)
);
INSERT INTO t1 (user_id) VALUES ('user1');
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
flush status;
SELECT user_id FROM t1 WHERE request_id=9999999999999;
user_id
SELECT user_id FROM t1 WHERE request_id=999999999999999999999999999999;
user_id
call dbms_trans.returning("*",  "UPDATE t1 SET user_id=null WHERE
                          request_id=9999999999999");
call dbms_trans.returning("*",  "UPDATE t1 SET user_id=null WHERE
                           request_id=999999999999999999999999999999");
DROP TABLE t1;
DROP TABLE IF EXISTS t1;
DROP FUNCTION IF EXISTS f1;
CREATE FUNCTION f1() RETURNS INT RETURN f1();
CREATE TABLE t1 (i INT);
INSERT INTO t1 VALUES (1);
call dbms_trans.returning("*", "UPDATE t1 SET i = 3 WHERE f1()");
ERROR HY000: Recursive stored functions and triggers are not allowed.
call dbms_trans.returning("*", "UPDATE t1 SET i = f1()");
ERROR HY000: Recursive stored functions and triggers are not allowed.
DROP TABLE t1;
DROP FUNCTION f1;
End of 5.0 tests
# Multitable-view update is not allowed in SELECT...FROM UPDATE
CREATE TABLE t1 ( a INT, KEY( a ) );
INSERT INTO t1 VALUES (0), (1);
CREATE VIEW v1 AS SELECT t11.a, t12.a AS b FROM t1 t11, t1 t12;
call dbms_trans.returning("*", "UPDATE IGNORE v1 SET a = 1");
ERROR HY000: Statement didn't support RETURNING clause
DROP TABLE t1;
DROP VIEW v1;
#
# Bug#54734 assert in Diagnostics_area::set_ok_status
#
DROP TABLE IF EXISTS t1, not_exists;
DROP FUNCTION IF EXISTS f1;
DROP VIEW IF EXISTS v1;
CREATE TABLE t1 (PRIMARY KEY(pk)) AS SELECT 1 AS pk;
CREATE FUNCTION f1() RETURNS INTEGER RETURN (SELECT 1 FROM not_exists);
CREATE VIEW v1 AS SELECT pk FROM t1 WHERE f1() = 13;
call dbms_trans.returning("*", "UPDATE v1 SET pk = 7 WHERE pk > 0");
ERROR HY000: View 'test.v1' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them
DROP VIEW v1;
DROP FUNCTION f1;
DROP TABLE t1;
#
# Testcase for SELECT...FROM UPDATE syntax
#
drop table if exists t1;
drop table if exists t2;
create table t1(id int auto_increment primary key, a int)engine=innodb;
insert into t1(a) values(1),(2),(3),(4),(5),(6);
create table t2(id int auto_increment primary key, a int)engine=innodb;
insert into t2(a) values(1),(1),(3),(3),(5),(5);
call dbms_trans.returning("*", "update t1 set a=id");
id	a
1	1
2	2
3	3
4	4
5	5
6	6
call dbms_trans.returning("*", "update t1, t2 set t1.a=t2.a where t1.id=t2.id");
ERROR HY000: Statement didn't support RETURNING clause
drop table t1;
drop table t2;
